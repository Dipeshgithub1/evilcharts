{
  "name": "clipped-area-chart",
  "type": "registry:ui",
  "registryDependencies": [
    "chart"
  ],
  "dependencies": [
    "recharts",
    "motion"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "clipped-area-chart.tsx",
      "content": "\"use client\";\n\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { ChartConfig, ChartContainer } from \"@/components/ui/chart\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TrendingDown } from \"lucide-react\";\nimport { useRef, useState } from \"react\";\nimport { useSpring, useMotionValueEvent } from \"motion/react\";\n\nconst chartData = [\n  { month: \"January\", mobile: 245 },\n  { month: \"February\", mobile: 654 },\n  { month: \"March\", mobile: 387 },\n  { month: \"April\", mobile: 521 },\n  { month: \"May\", mobile: 412 },\n  { month: \"June\", mobile: 598 },\n  { month: \"July\", mobile: 312 },\n  { month: \"August\", mobile: 743 },\n  { month: \"September\", mobile: 489 },\n  { month: \"October\", mobile: 476 },\n  { month: \"November\", mobile: 687 },\n  { month: \"December\", mobile: 198 },\n];\n\nconst chartConfig = {\n  mobile: {\n    label: \"Mobile\",\n    color: \"#FCA070\",\n  },\n} satisfies ChartConfig;\n\nexport function ClippedAreaChart() {\n  const chartRef = useRef<HTMLDivElement>(null);\n  const [axis, setAxis] = useState(0);\n\n  // motion values\n  const springX = useSpring(0, {\n    damping: 30,\n    stiffness: 100,\n  });\n  const springY = useSpring(0, {\n    damping: 30,\n    stiffness: 100,\n  });\n\n  useMotionValueEvent(springX, \"change\", (latest) => {\n    setAxis(latest);\n  });\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          ${springY.get().toFixed(0)}\n          <Badge variant=\"secondary\" className=\"ml-2\">\n            <TrendingDown className=\"h-4 w-4\" />\n            <span>-5.2%</span>\n          </Badge>\n        </CardTitle>\n        <CardDescription>Total revenue for last year</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer\n          ref={chartRef}\n          className=\"h-54 w-full\"\n          config={chartConfig}\n        >\n          <AreaChart\n            className=\"overflow-visible\"\n            accessibilityLayer\n            data={chartData}\n            onMouseMove={(state) => {\n              const x = state.activeCoordinate?.x;\n              const dataValue = state.activePayload?.[0]?.value;\n              if (x && dataValue !== undefined) {\n                springX.set(x);\n                springY.set(dataValue);\n              }\n            }}\n            onMouseLeave={() => {\n              springX.set(chartRef.current?.getBoundingClientRect().width || 0);\n              springY.jump(chartData[chartData.length - 1].mobile);\n            }}\n            margin={{\n              right: 0,\n              left: 0,\n            }}\n          >\n            <CartesianGrid\n              vertical={false}\n              strokeDasharray=\"3 3\"\n              horizontalCoordinatesGenerator={(props) => {\n                const { height } = props;\n                return [0, height - 30];\n              }}\n            />\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <Area\n              dataKey=\"mobile\"\n              type=\"monotone\"\n              fill=\"url(#gradient-cliped-area-mobile)\"\n              fillOpacity={0.4}\n              stroke=\"var(--color-mobile)\"\n              clipPath={`inset(0 ${\n                Number(chartRef.current?.getBoundingClientRect().width) - axis\n              } 0 0)`}\n            />\n            <line\n              x1={axis}\n              y1={0}\n              x2={axis}\n              y2={\"85%\"}\n              stroke=\"var(--color-mobile)\"\n              strokeDasharray=\"3 3\"\n              strokeLinecap=\"round\"\n              strokeOpacity={0.2}\n            />\n            <rect\n              x={axis - 50}\n              y={0}\n              width={50}\n              height={18}\n              fill=\"var(--color-mobile)\"\n            />\n            <text\n              x={axis - 25}\n              fontWeight={600}\n              y={13}\n              textAnchor=\"middle\"\n              fill=\"var(--primary-foreground)\"\n            >\n              ${springY.get().toFixed(0)}\n            </text>\n            {/* this is a ghost line behind graph */}\n            <Area\n              dataKey=\"mobile\"\n              type=\"monotone\"\n              fill=\"none\"\n              stroke=\"var(--color-mobile)\"\n              strokeOpacity={0.1}\n            />\n            <defs>\n              <linearGradient\n                id=\"gradient-cliped-area-mobile\"\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"1\"\n              >\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.2}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0}\n                />\n                <mask id=\"mask-cliped-area-chart\">\n                  <rect\n                    x={0}\n                    y={0}\n                    width={\"50%\"}\n                    height={\"100%\"}\n                    fill=\"white\"\n                  />\n                </mask>\n              </linearGradient>\n            </defs>\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}