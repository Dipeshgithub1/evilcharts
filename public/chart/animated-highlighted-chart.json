{
  "name": "animated-highlighted-chart",
  "type": "registry:ui",
  "registryDependencies": [
    "charts"
  ],
  "dependencies": [
    "recharts"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "animated-highlighted-chart.tsx",
      "content": "\"use client\";\n\nimport { Area, AreaChart, CartesianGrid, XAxis } from \"recharts\";\n\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TrendingDown } from \"lucide-react\";\nimport React from \"react\";\n\n// Change it to your needs\nconst animationConfig = {\n  glowWidth: 300,\n};\n\nconst chartData = [\n  { month: \"January\", desktop: 342, mobile: 245 },\n  { month: \"February\", desktop: 876, mobile: 654 },\n  { month: \"March\", desktop: 512, mobile: 387 },\n  { month: \"April\", desktop: 629, mobile: 521 },\n  { month: \"May\", desktop: 458, mobile: 412 },\n  { month: \"June\", desktop: 781, mobile: 598 },\n  { month: \"July\", desktop: 394, mobile: 312 },\n  { month: \"August\", desktop: 925, mobile: 743 },\n  { month: \"September\", desktop: 647, mobile: 489 },\n  { month: \"October\", desktop: 532, mobile: 476 },\n  { month: \"November\", desktop: 803, mobile: 687 },\n  { month: \"December\", desktop: 271, mobile: 198 },\n];\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--chart-1)\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"var(--chart-2)\",\n  },\n} satisfies ChartConfig;\n\nexport function AnimatedHighlightedAreaChart() {\n  const [xAxis, setXAxis] = React.useState<number | null>(null);\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          Highlighted Area Chart\n          <Badge\n            variant=\"outline\"\n            className=\"text-red-500 bg-red-500/10 border-none ml-2\"\n          >\n            <TrendingDown className=\"h-4 w-4\" />\n            <span>-5.2%</span>\n          </Badge>\n        </CardTitle>\n        <CardDescription>\n          Showing total visitors for the last 6 months\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <AreaChart\n            accessibilityLayer\n            data={chartData}\n            onMouseMove={(e) => setXAxis(e.chartX as number)}\n            onMouseLeave={() => setXAxis(null)}\n          >\n            <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              axisLine={false}\n              tickMargin={8}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip cursor={false} content={<ChartTooltipContent />} />\n            <defs>\n              <linearGradient\n                id=\"animated-highlighted-mask-grad\"\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"1\"\n                y2=\"0\"\n              >\n                <stop offset=\"0%\" stopColor=\"transparent\" />\n                <stop offset=\"50%\" stopColor=\"white\" />\n                <stop offset=\"100%\" stopColor=\"transparent\" />\n              </linearGradient>\n              <linearGradient\n                id=\"animated-highlighted-grad-desktop\"\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"1\"\n              >\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={0.4}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-desktop)\"\n                  stopOpacity={0}\n                />\n              </linearGradient>\n              <linearGradient\n                id=\"animated-highlighted-grad-mobile\"\n                x1=\"0\"\n                y1=\"0\"\n                x2=\"0\"\n                y2=\"1\"\n              >\n                <stop\n                  offset=\"5%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0.4}\n                />\n                <stop\n                  offset=\"95%\"\n                  stopColor=\"var(--color-mobile)\"\n                  stopOpacity={0}\n                />\n              </linearGradient>\n              {xAxis && (\n                <mask id=\"animated-highlighted-mask\">\n                  <rect\n                    x={xAxis - animationConfig.glowWidth / 2}\n                    y={0}\n                    width={animationConfig.glowWidth}\n                    height=\"100%\"\n                    fill=\"url(#animated-highlighted-mask-grad)\"\n                  />\n                </mask>\n              )}\n            </defs>\n            <Area\n              dataKey=\"mobile\"\n              type=\"natural\"\n              fill={\"url(#animated-highlighted-grad-mobile)\"}\n              fillOpacity={0.4}\n              stroke=\"var(--color-mobile)\"\n              stackId=\"a\"\n              strokeWidth={0.8}\n              mask=\"url(#animated-highlighted-mask)\"\n            />\n            <Area\n              dataKey=\"desktop\"\n              type=\"natural\"\n              fill={\"url(#animated-highlighted-grad-desktop)\"}\n              fillOpacity={0.4}\n              stroke=\"var(--color-desktop)\"\n              stackId=\"a\"\n              strokeWidth={0.8}\n              mask=\"url(#animated-highlighted-mask)\"\n            />\n          </AreaChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n",
      "type": "registry:ui"
    }
  ]
}