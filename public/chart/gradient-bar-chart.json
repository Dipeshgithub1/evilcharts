{
  "name": "gradient-bar-chart",
  "type": "registry:ui",
  "registryDependencies": [
    "chart"
  ],
  "dependencies": [
    "recharts"
  ],
  "devDependencies": [],
  "tailwind": {},
  "cssVars": {
    "light": {},
    "dark": {}
  },
  "files": [
    {
      "path": "gradient-bar-chart.tsx",
      "content": "\"use client\";\n\nimport { TrendingUp } from \"lucide-react\";\nimport { Bar, BarChart, XAxis } from \"recharts\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst chartData = [\n  { month: \"January\", desktop: 342 },\n  { month: \"February\", desktop: 876 },\n  { month: \"March\", desktop: 512 },\n  { month: \"April\", desktop: 629 },\n  { month: \"May\", desktop: 458 },\n  { month: \"June\", desktop: 781 },\n  { month: \"July\", desktop: 394 },\n  { month: \"August\", desktop: 925 },\n  { month: \"September\", desktop: 647 },\n  { month: \"October\", desktop: 532 },\n  { month: \"November\", desktop: 803 },\n  { month: \"December\", desktop: 271 },\n];\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--chart-1)\",\n  },\n} satisfies ChartConfig;\n\nexport function GradientBarChart() {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>\n          Bar Chart\n          <Badge\n            variant=\"outline\"\n            className=\"text-green-500 bg-green-500/10 border-none ml-2\"\n          >\n            <TrendingUp className=\"h-4 w-4\" />\n            <span>5.2%</span>\n          </Badge>\n        </CardTitle>\n        <CardDescription>January - June 2025</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <ChartContainer config={chartConfig}>\n          <BarChart accessibilityLayer data={chartData}>\n            <XAxis\n              dataKey=\"month\"\n              tickLine={false}\n              tickMargin={10}\n              axisLine={false}\n              tickFormatter={(value) => value.slice(0, 3)}\n            />\n            <ChartTooltip\n              cursor={false}\n              content={<ChartTooltipContent hideLabel />}\n            />\n            <Bar\n              shape={<CustomGradientBar />}\n              dataKey=\"desktop\"\n              fill=\"var(--color-desktop)\"\n            />\n          </BarChart>\n        </ChartContainer>\n      </CardContent>\n    </Card>\n  );\n}\n\nconst CustomGradientBar = (\n  props: React.SVGProps<SVGRectElement> & { dataKey?: string }\n) => {\n  const { fill, x, y, width, height, dataKey } = props;\n\n  return (\n    <>\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        stroke=\"none\"\n        fill={`url(#gradient-bar-pattern-${dataKey})`}\n      />\n      <rect x={x} y={y} width={width} height={2} stroke=\"none\" fill={fill} />\n      <defs>\n        <linearGradient\n          id={`gradient-bar-pattern-${dataKey}`}\n          x1=\"0\"\n          y1=\"0\"\n          x2=\"0\"\n          y2=\"1\"\n        >\n          <stop offset=\"0%\" stopColor={fill} stopOpacity={0.5} />\n          <stop offset=\"100%\" stopColor={fill} stopOpacity={0} />\n        </linearGradient>\n      </defs>\n    </>\n  );\n};\n",
      "type": "registry:ui"
    }
  ]
}